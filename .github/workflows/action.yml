# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      resourceGroupName:
        description: 'Data Factory resource group name'
        required: true
      dataFactoryName:
        description: 'Data factory name'
        required: true
      armTemplateFile:
        description: 'ARM template file name'
        required: false
        default: 'ARMTemplateForFactory.json'
      armTemplateParametersFile:
        description: 'ARM template parameters file name'
        required: false
        default: 'ARMTemplateParametersForFactory.json'
      additionalParameters:
        description: 'Parameters which will be replaced in the ARM template'
        required: false
        default: ''
      skipAzModuleInstallation:
        description: 'Parameters which skip the Az module installation'
        required: false
        default: 'false'
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: List PowerShell folder
        run: |
          ls "c:\Program Files (x86)\Microsoft SDKs\Azure"
      - name: Install Az PowerShell module
        run: if('${{ inputs.skipAzModuleInstallation }}' -ne 'true') { Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force }
        shell: pwsh
      - name: Get Data Factory Triggers
        run: Get-AzDataFactoryV2Trigger -ResourceGroupName "MonitoringADFDemoRG" -DataFactoryName "cl-stg-datafactory"
        shell: pwsh         
        
#       - name: Install Data Factory
#         run: Install-Module -Name Az.DataFactory -RequiredVersion 1.0.2 -Force 
#         shell: pwsh
        
#       - name: Uninstall AzureRm
#         run: Uninstall-AzureRm 
#         shell: pwsh

#       - name: Install Az AllowClobber module
#         run: Install-Module -Name Az -AllowClobber -Scope AllUsers -Force
#         shell: pwsh
        
#       - name: Install Az DataFactory module
#         run: Install-Module -Name Az.DataFactory -RequiredVersion 1.0.0 -Force
#         shell: pwsh
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: adf_publish
          path: adf_publish
   
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}/adf_publish
      
      - name: List files in GitHub action path
        run: |
         ls ${{ github.action_path }}
       
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          environment: azurecloud
       
      - name: Run Pre-deployment script
        run: |
          ${{ github.workspace }}\adf_publish\PrePostDeploymentScript.ps1 `
            -armTemplate "adf_publish/cl-datafactory-df/${{ inputs.armTemplateFile }}" `
            -ResourceGroupName "${{ inputs.resourceGroupName }}" `
            -DataFactoryName "${{ inputs.dataFactoryName }}" `
            -predeployment $true `
            -deleteDeployment $false
        shell: pwsh

      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ inputs.resourceGroupName }}
          template: ./adf_publish/cl-datafactory-df/${{ inputs.armTemplateFile }}
          parameters: ./adf_publish/cl-datafactory-df/${{ inputs.armTemplateParametersFile }}

#       - name: Run Post-deployment script
#         run: |
#           ${{ github.action_path }}/PrePostDeploymentScript.ps1 `
#             -armTemplate "${{ inputs.armTemplateFile }}" `
#             -ResourceGroupName "${{ inputs.resourceGroupName }}" `
#             -DataFactoryName '${{ inputs.dataFactoryName }}' `
#             -predeployment $false `
#             -deleteDeployment $true
#         shell: pwsh
